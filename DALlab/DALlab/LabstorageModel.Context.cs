//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALlab
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LabStorageEntities : DbContext
    {
        public LabStorageEntities()
            : base("name=LabStorageEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<detail> details { get; set; }
        public virtual DbSet<record> records { get; set; }
    
        public virtual ObjectResult<displayitems_Result> displayitems(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<displayitems_Result>("displayitems", idParameter);
        }
    
        public virtual ObjectResult<display_items_Result> display_items()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<display_items_Result>("display_items");
        }
    
        public virtual ObjectResult<search_Result> search(string s)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<search_Result>("search", sParameter);
        }
    
        public virtual ObjectResult<searchitem_Result> searchitem(string s)
        {
            var sParameter = s != null ?
                new ObjectParameter("s", s) :
                new ObjectParameter("s", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<searchitem_Result>("searchitem", sParameter);
        }
    }
}
